{"version":3,"sources":["features/memberSlice.jsx","components/ConfigMembers.jsx","components/ConfigCategory.jsx","components/ConfigSubCat.jsx","components/Configuration.jsx","components/SummaryForm.jsx","components/NavSecond.jsx","components/colors.js","components/SummaryChart.jsx","components/Dashboard.jsx","features/userSlice.jsx","components/Login.jsx","components/Register.jsx","components/Default.jsx","components/StatsMember.jsx","components/StatsCategory.jsx","components/StatsSub.jsx","components/Stats.jsx","components/Registry.jsx","components/Logout.jsx","components/NavMain.jsx","components/Footer.jsx","components/Main.jsx","features/store.js","App.js","reportWebVitals.js","index.js"],"names":["memberSlice","createSlice","name","initialState","members","records","categories","subcategories","reducers","setMembers","state","action","payload","addMember","push","removeMember","filter","subc","id","r","made_by","updateMember","index","findIndex","el","values","data","setCategory","addCat","removeCat","category_associated","forEach","updateCat","setSubCategory","addSub","removeSub","sub_category_associated","updateSub","setRecords","addRecords","removeRecord","record","updateRecord","RenderMember","axios","require","dispatch","useDispatch","token","useSelector","auth","headers","Authorization","url","useState","type","setType","addModal","setaddModal","AddModal","formik","useFormik","initialValues","member_name","onSubmit","new_name","resetForm","method","then","res","actions","catch","e","err","console","log","response","forbidden","includes","alert","config","current","deleteMember","modifyMember","isOpen","toggle","close","className","onClick","handleSubmit","xs","onChange","handleChange","value","placeholder","required","color","setCurrent","i","membersRendered","map","hover","responsive","RenderdCategory","addModalC","setaddModalC","AddModalS","category_name","modifyCategory","categoriesRendered","RenderdSubCat","addModalS","setaddModalS","renderdCategories","c","sub_category_name","primary_category","primary_category_id","Fragment","subcategoriesRendered","catname","find","Configurations","location","useLocation","useEffect","hash","document","getElementById","slice","scrollIntoView","behavior","window","scrollTo","top","left","RecordForm","subCategories","setAlert","redAlert","setRedAlert","title","price","member","category","sub_category","description","date","Date","toJSON","replace","setSubmitting","setErrors","main_cat","sub_cat","setStatus","record_name","created_at","setTimeout","success","validateOnChange","validateOnBlur","renderedSubCategories","sb","m","renderedMembers","style","backgroundColor","padding","textAlign","paddingBottom","htmlFor","to","SecondNav","setOpen","light","expand","navbar","SECOND_COLORS","COLORS","SHORT_MONTH","SummaryChart","getMonth","month","setMonth","getFullYear","year","setYear","months","myRecord","cat","cell_color","tot","keys","Object","length","Cell","fill","label","ResponsiveContainer","width","aspect","PieChart","Pie","dataKey","startAngle","endAngle","innerRadius","innerWidth","paddingAngle","Label","position","Tooltip","contentStyle","border","Legend","margin","right","bottom","layout","align","verticalAlign","iconSize","val","Dashboard","marginTop","lg","display","authSlice","user","refreshToken","isLogged","setAuthTokens","setAccount","account","logout","LoginModal","force","history","useHistory","modal","setModal","col","setCol","wrongdata","setwrongdata","username","password","access","refresh","get","detail","onReset","RegisterForm","notavailable","setnotavailable","email","post","user_already_taken","Default","sm","marginBottom","innerHeight","src","alt","Login","Register","StatsMember","unique_month","Set","add","unique_member","memberCost","dataMember","k","tmp","colorBar","Bar","LabelList","max","Math","apply","o","BarChart","height","CartesianGrid","XAxis","YAxis","domain","tickCount","StatsCategory","unique_category","categoryCost","dataCategory","colorCategory","stackId","StatsSubCategory","records_c","unique_subcategories","dataSub","dataCate","sort","a","b","dataMain","main_color","dataSec","sec_color","j","kk","rateo","outerRadius","Stats","records_o","JSON","parse","stringify","setFullYear","firstdate","setFirstdate","seconddate","setSeconddate","target","md","StatsSub","Registry","iModal","setInfoModal","Info","size","sc","formik_s","filteredRecords","recordsRendered","inline","striped","LogoutForm","MyNav","AuthenticatedUser","Logout","ExternalUser","Footer","paddingTop","href","Main","exact","path","component","rootReducer","combineReducers","reducer","persistedReducer","persistReducer","key","version","storage","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","App","loading","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.caba0e71.chunk.js","sourcesContent":["import {createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const memberSlice = createSlice({\r\n    name: 'members',\r\n    initialState: {\r\n        members: [],\r\n        records: [],\r\n        categories:[],\r\n        subcategories:[]\r\n    },\r\n    reducers: {\r\n        // members\r\n        setMembers: (state, action) => {\r\n            state.members = action.payload;\r\n        },\r\n        addMember: (state, action) => {\r\n            state.members.push(action.payload)\r\n        },\r\n        removeMember: (state, action) => {\r\n            state.members = state.members.filter((subc) => subc.id != action.payload)\r\n            state.records = state.records.filter((r) => r.made_by != action.payload)\r\n        },\r\n        updateMember: (state, action) => {\r\n            const index = state.members.findIndex((el) => el.id === action.payload.values.data.id)\r\n            state.members[index] = action.payload.values.data\r\n        },\r\n        // Categories\r\n        setCategory: (state, action) => {\r\n            state.categories = action.payload\r\n        },\r\n        addCat: (state, action) => {\r\n            state.categories.push(action.payload)\r\n        },\r\n        removeCat: (state, action) => {\r\n            state.records = state.records.filter((r) => r.category_associated == action.payload)\r\n            state.records.forEach((r) => {r.category_associated = null})\r\n            state.categories = state.categories.filter((subc) => subc.id != action.payload)\r\n        },\r\n        updateCat: (state, action) => {\r\n            const index = state.categories.findIndex((el) => el.id === action.payload.values.data.id)\r\n            state.categories[index] = action.payload.values.data\r\n        },\r\n        // subcategories\r\n        setSubCategory: (state, action) => {\r\n            state.subcategories = action.payload\r\n        },\r\n        addSub: (state, action) => {\r\n            state.subcategories.push(action.payload)\r\n        },\r\n        removeSub: (state, action) => {\r\n            state.records = state.records.filter((r) => r.sub_category_associated == action.payload)\r\n            state.records.forEach((r) => {r.sub_category_associated = null})\r\n            state.subcategories = state.subcategories.filter((subc) => subc.id != action.payload)\r\n        },\r\n        updateSub: (state, action) => {\r\n            const index = state.subcategories.findIndex((el) => el.id === action.payload.values.data.id)\r\n            state.subcategories[index] = action.payload.values.data\r\n        },\r\n        // records\r\n        setRecords: (state, action) => {\r\n            state.records = action.payload\r\n        },\r\n        addRecords: (state, action) => {\r\n            state.records.push(action.payload)\r\n        },\r\n        removeRecord: (state, action) => {\r\n            state.records = state.records.filter((record) => record.id != action.payload)\r\n        },\r\n        updateRecord: (state, action) => {\r\n            const index = state.records.findIndex((el) => el.id === action.payload.values.data.id)\r\n            state.records[index] = action.payload.values.data\r\n        }\r\n    }});\r\n\r\nexport default memberSlice;\r\n","import { useFormik } from 'formik';\r\nimport React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport * as axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { memberSlice } from './../features/memberSlice'\r\nimport { Button, Col, Container, Form, FormGroup, Input, Label, Modal, ModalBody, ModalHeader, Row, Table } from 'reactstrap';\r\n\r\nconst RenderMember = () => {\r\n    var axios = require(\"axios\")\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(state => state.auth.token)\r\n    const headers = { Authorization: `Bearer ${token}` }\r\n    const url = 'http://localhost:8000/api/members/'\r\n    const [type, setType] = useState(\"delete\")\r\n    const [addModal, setaddModal] = useState(false)\r\n    const [update, setUpdate] = useState(false)\r\n\r\n\r\n\r\n    const AddModal = () => {\r\n        const formik = useFormik({\r\n            initialValues: { member_name: \"\" },\r\n            onSubmit: (values, { resetForm }) => {\r\n                setaddModal(!addModal)\r\n                switch (type) {\r\n                    case \"add\":\r\n                        addMember(values.member_name);\r\n                        break;\r\n                    case \"delete\":\r\n                        deleteMember();\r\n                        break;\r\n                    default:\r\n                        modifyMember(values.member_name);\r\n                        break;\r\n                }\r\n                resetForm()\r\n            }\r\n        });\r\n\r\n        function addMember(new_name) {\r\n            var config = {\r\n                method: 'post',\r\n                url: url,\r\n                headers: headers,\r\n                data: { member_name: new_name }\r\n            };\r\n            axios(config)\r\n            .then(res=>{ dispatch(memberSlice.actions.addMember(res.data)) })\r\n            .catch(e => {\r\n                let err = {e}\r\n                console.log({ e })\r\n                try {if (err.e.response.data.forbidden.includes(\"exceeded\")) alert('Max Members Exceeded')}\r\n                catch{}\r\n            })\r\n        }\r\n\r\n        function deleteMember() {\r\n            var config = {\r\n                method: 'delete',\r\n                url: url,\r\n                headers: headers,\r\n                data: { id: current.id }\r\n            };\r\n\r\n            axios(config)\r\n            .then(() => {dispatch(memberSlice.actions.removeMember(current.id))})\r\n                .catch(e => ({ e })) //console.log\r\n        }\r\n\r\n\r\n        function modifyMember(new_name) {\r\n            var config = {\r\n                method: 'put',\r\n                url: url,\r\n                headers: headers,\r\n                data: { id: current.id, member_name: new_name }\r\n            };\r\n            axios(config)\r\n            .then((values) =>{dispatch(memberSlice.actions.updateMember({values}))})\r\n            .catch(e => ({ e })) //console.log\r\n        }\r\n\r\n        return (\r\n            <Modal isOpen={addModal} toggle={() => setaddModal(!addModal)}>\r\n                <ModalHeader close={<button className=\"close\" onClick={() => setaddModal(!addModal)}>×\r\n                </button>}>Form</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={formik.handleSubmit}>\r\n                        <Container>\r\n                            {type != \"delete\" ?\r\n                                <FormGroup>\r\n                                    <Row className=\"align-items-center\">\r\n                                        <Col xs=\"4\" >\r\n                                            <Label>Member Name</Label>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Input\r\n                                                name=\"member_name\"\r\n                                                id=\"member_name\"\r\n                                                type=\"text\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.member_name}\r\n                                                placeholder='Insert the new Member Name'\r\n                                                required\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </FormGroup> :\r\n                                <Container>\r\n                                    <Row>\r\n                                        <Col xs={12}>\r\n                                            <span>Are you sure to delete?</span>\r\n                                        </Col>\r\n                                        </Row>\r\n                                        <Row className='text-center'>\r\n                                            <Col xs={12} >\r\n                                                <span><h3 className='deleteName'>{current.member_name}</h3></span>\r\n                                            </Col>\r\n                                            <span>Deleting the member will imply lose all the records produced by this member.</span>\r\n                                        </Row>\r\n\r\n\r\n                                </Container>\r\n                            }\r\n                            {type != \"delete\" ?\r\n                                <Row className=\"text-center\">\r\n                                    <Col xs={12}>\r\n                                        <Button type=\"submit\" className='subButton' color='primary'>\r\n                                            Save Member\r\n                                        </Button>\r\n                                        <Button type=\"reset\" className='subButton' onClick={() => setaddModal(!addModal)} color='secondary'>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row> :\r\n                                <Row className=\"text-center\">\r\n                                    <Col xs={12}>\r\n                                        <Button type=\"submit\" className='subButton' color='danger'>\r\n                                            Delete Member\r\n                                        </Button>\r\n                                        <Button type=\"reset\" className='subButton' onClick={() => setaddModal(!addModal)} color='secondary'>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>}\r\n\r\n                        </Container>\r\n                    </Form >\r\n                </ModalBody>\r\n            </Modal>);\r\n    }\r\n\r\n    const members = useSelector(state => state.members.members)\r\n    const [current, setCurrent] = useState({})\r\n    // if (members.lenght > 0) {setCurrent(members[0])}\r\n\r\n    let i = 0;\r\n    const membersRendered = members.map((r) => {\r\n        i++;\r\n        return (\r\n            <tr>\r\n                <th>{i}</th>\r\n                <td>{r.member_name}</td>\r\n                <td>\r\n                    <Button color=\"primary\" onClick={() => { setaddModal(!addModal); setType(\"update\"); setCurrent(r) }} ><i className='fa fa-refresh'></i></Button>\r\n                    <Button color=\"danger\" onClick={() => { setaddModal(!addModal); setType(\"delete\"); setCurrent(r) }} ><i className='fa fa-trash-o sm'></i></Button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    });\r\n    return (\r\n        <Row className='confRow'>\r\n            <AddModal />\r\n            <Col>\r\n                <Row>\r\n                    <Col xs='auto'>\r\n                        <h2>Member</h2>\r\n                    </Col>\r\n                    <Col>\r\n                        <Button color='success' onClick={() => { setaddModal(!addModal); setType(\"add\") }}>Add Member</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='text-center'>\r\n                    <Table hover responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Name</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {membersRendered}\r\n                        </tbody>\r\n                    </Table>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n\r\n}\r\nexport default RenderMember;\r\n","import { useFormik } from 'formik';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { memberSlice } from './../features/memberSlice'\r\nimport { Button, Col, Container, Form, FormGroup, Input, Label, Modal, ModalBody, ModalHeader, Row, Table } from 'reactstrap';\r\n\r\nconst RenderdCategory = () => {\r\n\r\n    var axios = require(\"axios\")\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(state => state.auth.token)\r\n    const headers = { Authorization: `Bearer ${token}` }\r\n    const url = 'http://localhost:8000/api/category/'\r\n    const [type, setType] = useState(\"delete\")\r\n    const [addModalC, setaddModalC] = useState(false)\r\n    const [update, setUpdate] = useState(false)\r\n\r\n\r\n    const AddModalS = () => {\r\n        const formik = useFormik({\r\n            initialValues: { category_name: \"\" },\r\n            onSubmit: (values, { resetForm }) => {\r\n                setaddModalC(!addModalC)\r\n                switch (type) {\r\n                    case \"add\":\r\n                        addCategory(values.category_name);\r\n                        break;\r\n                    case \"delete\":\r\n                        deleteCategory(current.id);\r\n                        break;\r\n                    default:\r\n                        modifyCategory(current.id, values.category_name);\r\n                        break;\r\n                }\r\n                resetForm()\r\n            }\r\n        });\r\n        function addCategory(new_name) {\r\n            var config = {\r\n                method: 'post',\r\n                url: url,\r\n                headers: headers,\r\n                data: { category_name: new_name }\r\n            };\r\n            axios(config)\r\n            .then(res=>{ dispatch(memberSlice.actions.addCat(res.data)) })\r\n            .catch(e => {\r\n                let err = {e}\r\n                console.log({ e })\r\n                try {if (err.e.response.data.forbidden.includes(\"exceeded\")) alert('Max Category Exceeded')}\r\n                catch{}\r\n            })\r\n        }\r\n\r\n        function deleteCategory(id) {\r\n            var config = {\r\n                method: 'delete',\r\n                url: url,\r\n                headers: headers,\r\n                data: { id: id }\r\n            };\r\n            axios(config)\r\n             .then(() => {dispatch(memberSlice.actions.removeCat(current.id))})\r\n                .catch(e => ({ e })) //console.log\r\n        }\r\n\r\n\r\n        function modifyCategory(id, new_name) {\r\n            var config = {\r\n                method: 'put',\r\n                url: url,\r\n                headers: headers,\r\n                data: { id: id, category_name: new_name }\r\n            };\r\n            axios(config)\r\n            .then((values) =>{dispatch(memberSlice.actions.updateCat({values}))})\r\n            .catch(e => ({ e })) //console.log\r\n        }\r\n\r\n\r\n        return (\r\n            <Modal isOpen={addModalC} toggle={() => setaddModalC(!addModalC)}>\r\n                <ModalHeader close={<button className=\"close\" onClick={() => setaddModalC(!addModalC)}>×\r\n                </button>}>Form Categories</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={formik.handleSubmit}>\r\n                        <Container>\r\n                            {type != \"delete\" ?\r\n                                <FormGroup>\r\n                                    <Row>\r\n                                        <Col xs=\"4\" className=\"align-items-center\">\r\n                                            <Label>Category Name</Label>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Input\r\n                                                name=\"category_name\"\r\n                                                id=\"category_name\"\r\n                                                type=\"text\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.category_name}\r\n                                                placeholder='Insert the new Member Name'\r\n                                                required\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </FormGroup> :\r\n                                <Container>\r\n                                    <Row>\r\n                                        <Col xs={12}>\r\n                                            <span>Are you sure to delete?</span>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className='text-center'>\r\n                                        <Col xs={12} >\r\n                                            <span><h3 className='deleteName'>{current.category_name}</h3></span>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            }\r\n                            {type != \"delete\" ?\r\n                                <Row className=\"text-center\">\r\n                                    <Col xs={12}>\r\n                                        <Button type=\"submit\" className='subButton' color='primary'>\r\n                                            Save Category\r\n                                        </Button>\r\n                                        <Button type=\"reset\" className='subButton' onClick={() => setaddModalC(!addModalC)} color='secondary'>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row> :\r\n                                <Row className=\"text-center\">\r\n                                    <Col xs={12}>\r\n                                        <Button type=\"submit\" className='subButton' color='danger'>\r\n                                            Delete Category\r\n                                        </Button>\r\n                                        <Button type=\"reset\" className='subButton' onClick={() => setaddModalC(!addModalC)} color='secondary'>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>}\r\n\r\n                        </Container>\r\n                    </Form >\r\n                </ModalBody>\r\n            </Modal>);\r\n    }\r\n\r\n\r\n    const categories = useSelector(state => state.members.categories)\r\n    const [current, setCurrent] = useState({})\r\n    // if (current.lenght > 0) {setCurrent(current[0])}\r\n\r\n\r\n    let i = 0;\r\n    const categoriesRendered = categories.map((r) => {\r\n        i++;\r\n        return (\r\n            <tr>\r\n                <th>{i}</th>\r\n                <td>{r.category_name}</td>\r\n                <td>\r\n                    <Button color=\"primary\" onClick={() => { setaddModalC(!addModalC); setType(\"update\"); setCurrent(r) }} ><i className='fa fa-refresh'></i></Button>\r\n                    <Button color=\"danger\" onClick={() => { setaddModalC(!addModalC); setType(\"delete\"); setCurrent(r) }} ><i className='fa fa-trash-o sm'></i></Button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    });\r\n    return (\r\n        <Row className='confRow'>\r\n            <AddModalS />\r\n            <Col>\r\n                <Row>\r\n                    <Col xs='auto'>\r\n                        <h2>Category</h2>\r\n                    </Col>\r\n                    <Col>\r\n                        <Button color='success' onClick={() => { setaddModalC(!addModalC); setType(\"add\") }}>Add Category</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='text-center'>\r\n                    <Table hover responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Name</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {categoriesRendered}\r\n                        </tbody>\r\n                    </Table>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n\r\n}\r\nexport default RenderdCategory;\r\n","import { useFormik } from 'formik';\r\nimport React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport * as axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { memberSlice } from './../features/memberSlice'\r\nimport { Button, Col, Container, Form, FormGroup, Input, Label, Modal, ModalBody, ModalHeader, Row, Table } from 'reactstrap';\r\n\r\nconst RenderdSubCat = () => {\r\n    var axios = require(\"axios\")\r\n    const dispatch = useDispatch()\r\n    const categories = useSelector(state => state.members.categories)\r\n\r\n    const token = useSelector(state => state.auth.token)\r\n    const headers = { Authorization: `Bearer ${token}` }\r\n    const url = 'http://localhost:8000/api/sub_category/'\r\n\r\n    const [type, setType] = useState(\"add\")\r\n    const [addModalS, setaddModalS] = useState(false)\r\n    const [update, setUpdate] = useState(false)\r\n\r\n    const renderdCategories = categories.map(c => { return <option value={c.id}>{c.category_name}</option> })\r\n\r\n    const AddModal = () => {\r\n        const formik = useFormik({\r\n            initialValues: { sub_category_name: current.sub_category_name, \r\n                primary_category: categories[0]? categories[0].id: '' },\r\n            onSubmit: (values, { resetForm }) => {\r\n                setaddModalS(!addModalS)\r\n                switch (type) {\r\n                    case \"add\":\r\n                        addCategory(values.sub_category_name, values.primary_category);\r\n                        break;\r\n                    case \"delete\":\r\n                        deleteCategory(current.id);\r\n                        break;\r\n                    default:\r\n                        modifyCategory(current.id, values.sub_category_name, values.primary_category);\r\n                        break;\r\n                }\r\n                resetForm()\r\n            }\r\n        });\r\n\r\n        function addCategory(new_name, primary_category) {\r\n            var config = {\r\n                method: 'post',\r\n                url: url,\r\n                headers: headers,\r\n                data: { sub_category_name: new_name, primary_category: primary_category }\r\n            };\r\n            axios(config)\r\n                .then(res=>{ dispatch(memberSlice.actions.addSub(res.data)) })\r\n                .catch(e => {\r\n                    let err = {e}\r\n                    console.log({ e })\r\n                    try {if (err.e.response.data.forbidden.includes(\"exceeded\")) alert('Max Sub Category Exceeded')}\r\n                    catch{}\r\n                })\r\n        }\r\n\r\n        function deleteCategory(id) {\r\n            var config = {\r\n                method: 'delete',\r\n                url: url,\r\n                headers: headers,\r\n                data: { id: id }\r\n            };\r\n\r\n            axios(config)\r\n                .then(res=>{ dispatch(memberSlice.actions.removeSub(current.id)) })\r\n                .catch(e => ({ e })) //console.log\r\n        }\r\n\r\n\r\n        function modifyCategory(id, new_name, primary_category) {\r\n            var config = {\r\n                method: 'put',\r\n                url: url,\r\n                headers: headers,\r\n                data: { id: id, sub_category_name: new_name, primary_category_id: primary_category }\r\n            };\r\n            axios(config)\r\n                .then((values) =>{dispatch(memberSlice.actions.updateSub({values}))})\r\n                .catch(e => ({ e })) //console.log\r\n        }\r\n\r\n        return (\r\n            <Modal isOpen={addModalS} toggle={() => setaddModalS(!addModalS)}>\r\n                <ModalHeader close={<button className=\"close\" onClick={() => setaddModalS(!addModalS)}>×\r\n                </button>}>Form SubCategory</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={formik.handleSubmit}>\r\n                        <Container>\r\n                            {type != \"delete\" ?\r\n                                <React.Fragment>\r\n                                    <FormGroup>\r\n                                        <Row>\r\n                                            <Col xs=\"4\" className=\"align-items-center\">\r\n                                                <Label>Primary Category</Label>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Input\r\n                                                    className='form-control'\r\n                                                    name=\"primary_category\"\r\n                                                    id=\"primary_category\"\r\n                                                    type=\"select\"\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.primary_category}\r\n                                                    placeholder='Insert the new Member Name'\r\n                                                    required\r\n                                                >\r\n                                                    {renderdCategories}\r\n                                                </Input>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Row>\r\n                                            <Col xs={4}>\r\n                                                <Label>SubCategory Name</Label>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Input\r\n                                                    name=\"sub_category_name\"\r\n                                                    id=\"sub_category_name\"\r\n                                                    type=\"text\"\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.sub_category_name}\r\n                                                    placeholder='Insert the new Member Name'\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </FormGroup></React.Fragment> :\r\n                                <Container>\r\n                                    <Row>\r\n                                        <Col xs={12}>\r\n                                            <span>Are you sure to delete?</span>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className='text-center'>\r\n                                        <Col xs={12} >\r\n                                            <span><h3 className='deleteName'>{current.sub_category_name}</h3></span>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            }\r\n                            {type != \"delete\" ?\r\n                                <Row className=\"text-center\">\r\n                                    <Col xs={12}>\r\n                                        <Button type=\"submit\" className='subButton' color='primary'>\r\n                                            Save SubCategory\r\n                                        </Button>\r\n                                        <Button type=\"reset\" className='subButton' onClick={() => setaddModalS(!addModalS)} color='secondary'>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row> :\r\n                                <Row className=\"text-center\">\r\n                                    <Col xs={12}>\r\n                                        <Button type=\"submit\" className='subButton' color='danger'>\r\n                                            Delete sub category\r\n                                        </Button>\r\n                                        <Button type=\"reset\" className='subButton' onClick={() => setaddModalS(!addModalS)} color='secondary'>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>}\r\n\r\n                        </Container>\r\n                    </Form >\r\n                </ModalBody>\r\n            </Modal>);\r\n    }\r\n\r\n    const subcategories = useSelector(state => state.members.subcategories)\r\n    const [current, setCurrent] = useState({})\r\n\r\n\r\n    let i = 0;\r\n    const subcategoriesRendered = subcategories.map((r) => {\r\n        i++;\r\n        let catname = categories.find(c => c.id == r.primary_category)\r\n        return (\r\n            <tr>\r\n                <th>{i}</th>\r\n                <td>{r.sub_category_name}</td>\r\n                <td>{catname? catname.category_name: \"This sub category does not exists anymore\"}</td>\r\n                <td>\r\n                    <Button color=\"primary\" onClick={() => { setaddModalS(!addModalS); setType(\"update\"); setCurrent(r) }} ><i className='fa fa-refresh'></i></Button>\r\n                    <Button color=\"danger\" onClick={() => { setaddModalS(!addModalS); setType(\"delete\"); setCurrent(r) }} ><i className='fa fa-trash-o sm'></i></Button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <Row className='confRow'>\r\n            <AddModal />\r\n            <Col>\r\n                <Row>\r\n                    <Col xs='auto'>\r\n                        <h2>Sub Category</h2>\r\n                    </Col>\r\n                    <Col>\r\n                        <Button color='success' onClick={() => { setaddModalS(!addModalS); setType(\"add\") }}>Add sub category</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row className='text-center'>\r\n                    <Table hover responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Name</th>\r\n                                <th>Related Category</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {subcategoriesRendered}\r\n                        </tbody>\r\n                    </Table>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n\r\n}\r\nexport default RenderdSubCat;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {  Container } from 'reactstrap';\r\nimport {useLocation} from 'react-router-dom'\r\n\r\nimport RenderMember from './ConfigMembers'\r\nimport RenderdCategory from './ConfigCategory'\r\nimport RenderdSubCat from './ConfigSubCat'\r\n\r\nconst Configurations = () => {\r\n    const location = useLocation()\r\n    useEffect(() => {\r\n        if (location.hash) document.getElementById(location.hash.slice(1)).scrollIntoView({behavior:\"smooth\"})\r\n        else window.scrollTo({top:0, left:0, behavior:\"smooth\"})\r\n    }, [location,])\r\n\r\n    return (\r\n            <Container>\r\n                <div id='member'>< RenderMember /></div>\r\n                <div id='category'>< RenderdCategory /></div>\r\n                <div id='subcategory'>< RenderdSubCat /></div>\r\n            </Container>\r\n    )\r\n}\r\n\r\nexport default Configurations;","import React, {useState} from \"react\";\r\nimport { Label, Col, Row, Button, FormGroup, Input, Form } from \"reactstrap\";\r\nimport { useFormik } from \"formik\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as axios from 'axios';\r\nimport memberSlice from \"../features/memberSlice\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst RecordForm = () => {\r\n  const dispatch = useDispatch()\r\n  const token = useSelector((state) => state.auth.token);\r\n  const members = useSelector((state) => state.members.members);\r\n  const headers = { \"Authorization\": `Bearer ${token}` }\r\n  const categories = useSelector((state) => state.members.categories);\r\n  const subCategories = useSelector((state) => state.members.subcategories);\r\n  const [alert, setAlert] = useState(false)\r\n  const [redAlert, setRedAlert] = useState(false)\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      price: \"\",\r\n      member: members[0]? members[0].id:null,\r\n      category: categories[0]? categories[0].id:null,\r\n      sub_category: null,\r\n      description: \"\",\r\n      date: new Date().toJSON().slice(0, 10).replace(/-/g, '-')\r\n    },\r\n    onSubmit: (values, {setSubmitting, setErrors, setStatus, resetForm}) => {\r\n      if (values.sub_category === -1) { values.sub_category = null }\r\n      addRecord(\r\n        values.title,\r\n        values.price,\r\n        values.member,\r\n        values.category,\r\n        values.sub_category,\r\n        values.description,\r\n        values.date\r\n      );\r\n      resetForm({})\r\n      setStatus({success: true})\r\n    },\r\n    validateOnChange: false,\r\n    validateOnBlur: false\r\n  });\r\n\r\n  function addRecord(title, price, member, main_cat, sub_cat, description, date) {\r\n    var axios = require('axios');\r\n    var config = {\r\n      method: 'post', url: 'http://localhost:8000/api/records/', headers: headers,\r\n      data: {\r\n        record_name: title,\r\n        price: price,\r\n        made_by: member,\r\n        category_associated: main_cat,\r\n        sub_category_associated: sub_cat,\r\n        description: description,\r\n        created_at: date,\r\n      }\r\n    };\r\n    axios(config)\r\n      .then((res) => { \r\n        dispatch(memberSlice.actions.addRecords(res.data))\r\n        setAlert(true)\r\n        setTimeout(()=> setAlert(false), 5000) })\r\n      .catch((e ) => {\r\n        setRedAlert(true)\r\n        setTimeout(()=> setRedAlert(false), 5000) \r\n        let err = {e}\r\n        try {if (err.e.response.data.forbidden.includes(\"exceeded\")) alert('Max Members Exceeded')}\r\n        catch{}})}\r\n\r\n  const renderdCategories = categories.map(c => { return <option value={c.id}>{c.category_name}</option> })\r\n  const selectedSub = subCategories.filter(sb => sb.primary_category == formik.values.category)\r\n  const renderedSubCategories = selectedSub.map((m) => { return <option value={m.id}>{m.sub_category_name}</option> });\r\n  const renderedMembers = members.map((m) => { return <option value={m.id}>{m.member_name}</option> });\r\n  \r\n  const alertClass = alert?  \"block\": \"none\"\r\n  const redClass = redAlert?  \"block\": \"none\"\r\n  const alertButton = \"rgba(154, 255, 154,0.6)\"\r\n  const alertRedButton = \"rgba(126, 25, 25,0.7)\"\r\n  var c;\r\n  if (redAlert){c = alertRedButton}\r\n  else if (alert){c = alertButton }\r\n  else{c = 'white'}\r\n  \r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Form onSubmit={formik.handleSubmit} style={{backgroundColor:c, padding:\"5px\"}}>\r\n        <h4 style={{ textAlign: \"center\", paddingBottom: \"20px\" }}>New records</h4>\r\n        <FormGroup>\r\n          <Row className=\"align-items-center\">\r\n            <Col>\r\n              <Label htmlFor=\"members\">Member</Label>\r\n            </Col>\r\n            <Col>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"member\"\r\n                id=\"member\"\r\n                value={formik.values.member}\r\n                onChange={formik.handleChange}\r\n                className='form-control'\r\n              >\r\n                {members[0]? <div></div>:  <option value={-1}> None </option>}\r\n                {renderedMembers}\r\n              </Input>\r\n            </Col>\r\n            <Col className='plusSign' xs='auto'>\r\n              <NavLink to='/configurations#member'>\r\n                  <i className='fa fa-plus fa-lg'></i>\r\n              </NavLink>\r\n            </Col>\r\n          </Row>\r\n        </FormGroup>\r\n        <FormGroup>\r\n        <Row className=\"align-items-center\">\r\n              <Col>\r\n              <Label>Title</Label>\r\n            </Col>\r\n            <Col xs='auto'>\r\n              <Input\r\n                name=\"title\"\r\n                id=\"title\"\r\n                type=\"text\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.title}\r\n                required\r\n                placeholder=\"Dai un Titolo\"\r\n              />\r\n            </Col>\r\n    \r\n          </Row>\r\n        </FormGroup>\r\n        <FormGroup>\r\n        <Row className=\"align-items-center\">\r\n            <Col>\r\n              <Label>Price</Label>\r\n            </Col>\r\n            <Col xs='auto'>\r\n              <Input\r\n                name=\"price\"\r\n                id=\"price\"\r\n                type=\"number\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.price}\r\n                placeholder=\"Dai un Prezzo\"\r\n                required\r\n              />\r\n            </Col>\r\n       \r\n          </Row>\r\n        </FormGroup>\r\n        <FormGroup>\r\n        <Row className=\"align-items-center\">\r\n            <Col >\r\n              <Label>Category</Label>\r\n            </Col>\r\n            <Col>\r\n              <Input\r\n                name=\"category\"\r\n                id=\"category\"\r\n                type=\"select\"\r\n                onChange={(e) => {\r\n                  formik.handleChange(e);\r\n                  formik.values.sub_category = -1;\r\n                }}\r\n                value={formik.values.category}\r\n                className='form-control'\r\n                required\r\n              >\r\n                {renderdCategories}\r\n              </Input>\r\n            </Col>\r\n            \r\n            <Col  className='plusSign' xs='auto'>\r\n              <NavLink to='/configurations#category'>\r\n           \r\n                  <i className='fa fa-plus fa-lg'></i>\r\n         \r\n              </NavLink>\r\n            </Col>\r\n          </Row>\r\n        </FormGroup>\r\n        <FormGroup>\r\n        <Row className=\"align-items-center\">\r\n            <Col  >\r\n              <Label>Sub category</Label>\r\n            </Col>\r\n            <Col>\r\n              <Input\r\n                name=\"sub_category\"\r\n                id=\"sub_category\"\r\n                type=\"select\"\r\n                onChange={(e) => { formik.handleChange(e); }}\r\n                value={formik.values.sub_category}\r\n                className='form-control'\r\n              >\r\n                <option value={\"\"}> None </option>\r\n                {renderedSubCategories}\r\n              </Input>\r\n            </Col>\r\n            <Col  className='plusSign' xs='auto'>\r\n              <NavLink to='/configurations#subcategory'>\r\n             \r\n                  <i className='fa fa-plus fa-lg'></i>\r\n            \r\n              </NavLink>\r\n            </Col>\r\n          </Row>\r\n        </FormGroup>\r\n        <FormGroup>\r\n        <Row className=\"align-items-center\">\r\n            <Col >\r\n              <Label>Date</Label>\r\n            </Col>\r\n            <Col xs='auto'>\r\n              <Input\r\n                name=\"date\"\r\n                id=\"date\"\r\n                type=\"date\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.date}\r\n              />\r\n            </Col>\r\n    \r\n          </Row>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Col>\r\n            <Label>Description</Label>\r\n          </Col>\r\n          <Col>\r\n            <Input\r\n              name=\"description\"\r\n              id=\"description\"\r\n              type=\"textarea\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.description}\r\n              placeholder=\"Dai una Descrizione\"\r\n            />\r\n          </Col>\r\n        </FormGroup>\r\n        <Row className=\"text-center\">\r\n          <Col xs={12} style={{paddingBottom:\"20px\"}}>\r\n            <Button type=\"submit\" className='subButton' color='primary'>\r\n              Save new record\r\n            </Button>\r\n            <Button type=\"reset\" className='subButton' color='secondary'>\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default RecordForm;\r\n","import {Nav, Navbar, Collapse, NavItem,NavbarToggler, Container, NavbarBrand} from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\n\r\nconst SecondNav = () =>{\r\n    const [isOpen, setOpen] = useState(false)\r\n\r\n    return(\r\n   \r\n            <Navbar light expand='lg' className='secondNav'>\r\n            <Container>\r\n                <NavbarBrand> <NavLink to='/home'> Summary</NavLink></NavbarBrand>\r\n                <NavbarToggler onClick={() => setOpen(!isOpen)} />\r\n\r\n                <Collapse isOpen={isOpen} navbar>\r\n                <Nav navbar className='mr-auto'>\r\n                    <NavItem>\r\n                        <NavLink to='/dashboard' className='nav-link'>\r\n                            Dashboards\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink to='/history' className='nav-link'>\r\n                            Registry\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink to='/configurations' className='nav-link'>\r\n                            Configurations\r\n                        </NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n                </Collapse>\r\n            </Container>\r\n            </Navbar>\r\n    )\r\n    \r\n}\r\n\r\nexport default SecondNav;","export const  SECOND_COLORS = [\r\n    \"#A1887F \",\r\n    \"#EB984E\",\r\n    \"#F4D03F\",\r\n    \"#58D68D\",\r\n    \"#48C9B0\",\r\n    \"#5499C7\",\r\n    \"#AF7AC5\",\r\n    \"#CD6155\",\r\n];\r\n\r\nexport const  COLORS = [\r\n    \"#B71C1C\",\r\n    \"#880E4F\",\r\n    \"#FF8042\",\r\n    \"#0D47A1\",\r\n    \"#006064\",\r\n    \"#689F38\",\r\n    \"#F57F17\",\r\n    \"#E65100\",\r\n    \"#0088FE\",\r\n];\r\n\r\n\r\nexport const MONTHS = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n];\r\n\r\nexport const SHORT_MONTH = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"Aug\",\r\n    \"Sept\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n];\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button, Col, Row } from \"reactstrap\";\r\nimport {\r\n    Cell,\r\n    Label,\r\n    Legend,\r\n    Pie,\r\n    PieChart,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n} from \"recharts\";\r\nimport {COLORS} from './colors.js'\r\n\r\n\r\nconst SummaryChart = () => {\r\n    const members = useSelector((state) => state.members.members);\r\n    const records = useSelector((state) => state.members.records);\r\n    const categories = useSelector((state) => state.members.categories);\r\n    const subcategories = useSelector((state) => state.members.subcategories);\r\n    const [month, setMonth] = useState(new Date().getMonth());\r\n    const [year, setYear] = useState(new Date().getFullYear());\r\n\r\n    const months = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",\r\n    ];\r\n\r\n    const myRecord = {};\r\n    records.map((r) => {\r\n        let date = new Date(r.created_at)\r\n        if ((date.getFullYear() == year) & (date.getMonth() == month)) {\r\n            let price = r.price;\r\n            let cat = r.category_associated;\r\n            if (cat) {\r\n                cat = categories.find((c) => c.id == r.category_associated).category_name;\r\n            }\r\n            if (!(cat in myRecord)) {\r\n                myRecord[cat] = price;\r\n            } else {\r\n                myRecord[cat] += price;\r\n            }\r\n        }\r\n    });\r\n\r\n    var cell_color = [];\r\n    var data = [];\r\n    var tot = 0;\r\n\r\n    const keys = Object.keys(myRecord);\r\n    for (let i = 0; i < keys.length; i++) {\r\n        data.push({ name: keys[i], value: myRecord[keys[i]] });\r\n        tot += myRecord[keys[i]];\r\n        cell_color.push(<Cell key={`cell-${i}`} fill={COLORS[i]} />);\r\n    }\r\n\r\n    var label = true\r\n    if (data.length === 0) { data = [{ name: `No Records in ${month}`, value: .01 }]; label = false }\r\n\r\n    function dealerPlus(val) {\r\n        if (val === 12) { setYear(year + 1); return 0 }\r\n        return val\r\n    }\r\n\r\n    function dealerMinus(val) {\r\n        if (val === -1) { setYear(year - 1); return 11 }\r\n        return val\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row className=\"text-center\">\r\n                <Col>\r\n                    <h4>Monthly summary of all members</h4>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <ResponsiveContainer width=\"99%\" aspect={1.5}>\r\n                        <PieChart>\r\n                            <Pie\r\n                                data={data}\r\n                                dataKey=\"value\"\r\n                                fill=\"#8884d8\"\r\n                                startAngle={0}\r\n                                endAngle={360}\r\n                                innerRadius={window.innerWidth < 500 ? 40 : 110}\r\n                                paddingAngle={1}\r\n                                label={window.innerWidth < 500 ? false : label}\r\n                            >\r\n                                {cell_color}\r\n                                <Label width={30} position=\"center\">\r\n                                    {`Tot ${tot}`}\r\n                                </Label>\r\n                            </Pie>\r\n                            <Tooltip\r\n                                contentStyle={{\r\n                                    border: \"4px solid royalblue\",\r\n                                    backgroundColor: \"peachpuff\",\r\n                                }}\r\n                            />\r\n                            {window.innerWidth < 500 ?\r\n                                <Legend\r\n                                    margin={{ top: 0, left: 0, right: 0, bottom: 0 }}\r\n                                    layout='horizontal' align='center' verticalAlign='bottom' iconSize={3} /> :\r\n                                <Legend\r\n                                    layout=\"vertical\"\r\n                                    align=\"left\"\r\n                                    verticalAlign=\"middle\"\r\n                                    iconSize={20} />}\r\n                        \r\n                        </PieChart>\r\n                    </ResponsiveContainer>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"text-center\">\r\n                <Col>\r\n                    <Button\r\n                        onClick={() => setMonth(dealerMinus(month - 1))}\r\n                        className=\"monthButton notCentral\"\r\n                    >\r\n                        {\" \"}\r\n                        {month === 0 ? months[11] : months[month - 1]}{\" \"}\r\n                    </Button>\r\n                    <Button onClick={() => setMonth((month))} className=\"monthButton\">\r\n                        {\" \"}\r\n                        {months[month]}{\" \"}\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => setMonth(dealerPlus((month + 1)))}\r\n                        className=\"monthButton notCentral\"\r\n                    >\r\n                        {month === 11 ? months[0] : months[month + 1]}\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SummaryChart;\r\n","import axios from \"axios\";\r\n\r\nimport React, { useState, Component } from \"react\";\r\n\r\nimport { Row, Col, Container } from \"reactstrap\";\r\nimport RecordForm from \"./SummaryForm\";\r\nimport SecondNav from \"./NavSecond\";\r\nimport SummaryChart from \"./SummaryChart\";\r\n\r\nfunction Dashboard() {\r\n    return (\r\n        <React.Fragment>\r\n            <Container style={{marginTop:\"50px\"}}>\r\n                <Row>\r\n                    <Col xs=\"12\" lg = '8' className='summaryChart'>\r\n                    <SummaryChart />\r\n                    <hr style={{border:\"black 1px dashed\", display: \"none\"}}/>\r\n                    </Col>\r\n                    <Col xs=\"12\" lg='4'>\r\n                        <RecordForm />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import {createSlice } from '@reduxjs/toolkit';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: {\r\n        user: null,\r\n        token: null,\r\n        refreshToken:null,\r\n        isLogged: false,\r\n    },\r\n    reducers: {\r\n        setAuthTokens: (state, action) => {\r\n            state.refreshToken = action.payload.refreshToken;\r\n            state.token = action.payload.token;\r\n            state.isLogged = true;\r\n\r\n        },\r\n        setAccount: (state, action) => {\r\n            state.account = action.payload\r\n            state.isLogged = true;\r\n        },\r\n        logout:( state ) => {\r\n            state.isLogged=false\r\n            state.token = null\r\n            state.refreshToken = null\r\n        }\r\n\r\n    }});\r\n\r\nexport default authSlice;\r\n","import React, { Component, useState } from 'react';\r\nimport { Row, Col, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, Button, NavItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom';\r\n// Formik form\r\nimport { useFormik } from 'formik';\r\n// Redux import\r\nimport { useDispatch } from 'react-redux';\r\nimport authSlice, { login } from '../features/userSlice';\r\nimport memberSlice from '../features/memberSlice';\r\n// persisent and axios\r\nimport { useHistory } from \"react-router\";\r\nimport * as axios from 'axios';\r\n// \r\n\r\n\r\n\r\nconst LoginModal = (force) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [modal, setModal] = useState(false)\r\n    const [col, setCol] = useState('white')\r\n    const [wrongdata, setwrongdata] = useState(<div></div>)\r\n    var axios = require('axios');\r\n\r\n    const login = (username, password) => {\r\n        var config = {\r\n            method: 'post',\r\n            url: 'http://127.0.0.1:8000/auth/login/',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: { username: username, password: password }\r\n        };\r\n        axios(config)\r\n            .then(res => {\r\n                dispatch(authSlice.actions.setAuthTokens(\r\n                    { token: res.data.access, refreshToken: res.data.refresh }\r\n                ));\r\n                dispatch(authSlice.actions.setAccount(res.data.user));\r\n                history.push('/')\r\n                setModal(!modal)\r\n                return (res.data.access)})\r\n            .then(token =>{\r\n\r\n                const headers = { headers: { \"Authorization\": `Bearer ${token}` } }\r\n\r\n                axios.get('http://localhost:8000/api/records/', headers)\r\n                .then(res => {dispatch(memberSlice.actions.setRecords(res.data)) })\r\n                .catch(e => ({ e })) //console.log\r\n\r\n                axios.get('http://localhost:8000/api/category/', headers)\r\n                .then(res => {dispatch(memberSlice.actions.setCategory(res.data)) })\r\n                .catch(e => ({ e })) //console.log\r\n\r\n                axios.get('http://localhost:8000/api/sub_category/', headers)\r\n                .then(res => {dispatch(memberSlice.actions.setSubCategory(res.data)) })\r\n                .catch(e => ({ e })) //console.log\r\n\r\n                axios.get('http://localhost:8000/api/members/', headers)\r\n                .then(res => { dispatch(memberSlice.actions.setMembers(res.data))})\r\n                .catch(e => ({ e })) //console.log\r\n            })\r\n            .catch(e => {\r\n                    try{if ({e}.e.response.data.detail === ('Wrong data')) setwrongdata(<div style={{color:\"firebrick\"}}>Wrong Data</div>)}\r\n                    catch{}\r\n                    setCol('#E74C3C'); setTimeout(()=> {setCol('white'); setwrongdata(<div></div>)}, 5000)})\r\n   \r\n\r\n\r\n\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: { username: '', password: '' },\r\n        onSubmit: (values, {setErrors, setStatus, resetForm}) => { \r\n            login(values.username, values.password) \r\n        },\r\n        onReset: (e, {resetForm}) => {resetForm({})},\r\n        validateOnChange: false,\r\n        validateOnBlur: false\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <NavItem className>\r\n                <NavLink to='#' className='nav-link' onClick={() => setModal(!modal)}>\r\n                    Login\r\n                </NavLink>\r\n            </NavItem>\r\n            <Modal isOpen={modal} toggle={() => setModal(!modal)} >\r\n                <ModalHeader\r\n                    close={<button className=\"close\" onClick={() => setModal(!modal)}>×</button>}\r\n                    toggle={() => setModal(!modal)} >Login Form {wrongdata}</ModalHeader>\r\n                <ModalBody style={{ backgroundColor: col }}>\r\n                    <Form onSubmit={formik.handleSubmit}>\r\n                        <FormGroup>\r\n                            <Col>\r\n                                <Label>Username</Label>\r\n                            </Col>\r\n                            <Col>\r\n                                <Input\r\n                                    name='username'\r\n                                    id='username'\r\n                                    type='text'\r\n                                    onChange={formik.handleChange}\r\n                                    value={formik.values.username}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Col>\r\n                                <Label>Password</Label>\r\n                            </Col>\r\n                            <Col>\r\n                                <Input\r\n                                    name='password'\r\n                                    id='password'\r\n                                    type='password'\r\n                                    onChange={formik.handleChange}\r\n                                    value={formik.values.password}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <Row className='ml-auto'>\r\n                            <Col xs={2}>\r\n                                <Button type='submit' className='primary bg-primary'>\r\n                                    Submit\r\n                                </Button>\r\n                            </Col>\r\n                            <Col xs={2}>\r\n                                <Button type='reset' className='primary bg-secondary '>\r\n                                    Cancel\r\n                                </Button>\r\n                            </Col>\r\n                            <Col xs='auto' className='text-center align-items-center '>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default LoginModal;","import React, { Component, useState } from 'react';\r\nimport { Row, Col, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, Button, NavItem } from 'reactstrap'\r\nimport { NavLink } from 'react-router-dom';\r\n// Formik form\r\nimport { ErrorMessage, useFormik } from 'formik';\r\n// Redux import\r\nimport { useDispatch } from 'react-redux';\r\nimport authSlice, { login } from '../features/userSlice';\r\nimport memberSlice from '../features/memberSlice';\r\n// persisent and axios\r\nimport { useHistory } from \"react-router\";\r\nimport axios from 'axios';\r\n\r\n\r\nconst RegisterForm = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [modal, setModal] = useState(false)\r\n    const [col, setCol] = useState('white')\r\n    const [notavailable, setnotavailable] = useState(<div></div>)\r\n\r\n    const register = (username, password, email) => {\r\n        let url = \"http://localhost:8000/auth/register/\"\r\n        axios.post(url, { username, password, email })\r\n            .then((res) => {\r\n                dispatch(authSlice.actions.setAuthTokens(\r\n                    { token: res.data.token, refreshToken: res.data.refresh, }));\r\n                dispatch(authSlice.actions.setAccount(res.data.user));\r\n                history.push('/')\r\n                setModal(!modal)\r\n                return (res.data.token)\r\n            }).then(token => {\r\n                const headers = { headers: { \"Authorization\": `Bearer ${token}` } }\r\n\r\n                axios.get('http://localhost:8000/api/records/', headers)\r\n                    .then(res => { dispatch(memberSlice.actions.setRecords(res.data)) })\r\n                    .catch(e => ({ e })) //console.log\r\n\r\n                axios.get('http://localhost:8000/api/category/', headers)\r\n                    .then(res => { dispatch(memberSlice.actions.setCategory(res.data)) })\r\n                    .catch(e => ({ e })) //console.log\r\n\r\n                axios.get('http://localhost:8000/api/sub_category/', headers)\r\n                    .then(res => { dispatch(memberSlice.actions.setSubCategory(res.data)) })\r\n                    .catch(e => ({ e })) //console.log\r\n\r\n                axios.get('http://localhost:8000/api/members/', headers)\r\n                    .then(res => { dispatch(memberSlice.actions.setMembers(res.data)) })\r\n                    .catch(e => ({ e })) //console.log\r\n            })\r\n            .catch(e => {\r\n                try{\r\n                    if ({e}.e.response.data.user_already_taken) setnotavailable(<div style={{color:\"firebrick\"}}>User Not Available</div>)}\r\n                catch{}\r\n                setCol('#E74C3C'); setTimeout(()=> {setCol('white'); setnotavailable(<div></div>)}, 5000)\r\n            });\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: { username: '', password: '', email: '' },\r\n        onSubmit: (values) => { register(values.username, values.password, values.email) },\r\n        validateOnChange: false,\r\n        validateOnBlur: false,\r\n        onReset: (e, {resetForm}) => {resetForm({})}\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <NavItem className>\r\n                <NavLink to='#' className='nav-link' onClick={() => setModal(!modal)}>\r\n                    Register\r\n                </NavLink>\r\n            </NavItem>\r\n            <Modal isOpen={modal} toggle={() => setModal(!modal)} >\r\n                <ModalHeader\r\n                    close={<button className=\"close\" onClick={() => setModal(!modal)}>×</button>}\r\n                    toggle={() => setModal(!modal)} >Register Form     {notavailable}</ModalHeader>\r\n                <ModalBody style={{ backgroundColor: col }}>\r\n                    <Form onSubmit={formik.handleSubmit}>\r\n                        <FormGroup>\r\n                            <Col>\r\n                                <Label>Username</Label>\r\n                            </Col>\r\n                            <Col>\r\n                                <Input\r\n                                    name='username'\r\n                                    id='username'\r\n                                    type='text'\r\n                                    onChange={formik.handleChange}\r\n                                    value={formik.values.username}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Col>\r\n                                <Label>Email</Label>\r\n                            </Col>\r\n                            <Col>\r\n                                <Input\r\n                                    name='email'\r\n                                    id='email'\r\n                                    type='email'\r\n                                    onChange={formik.handleChange}\r\n                                    value={formik.values.email}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Col>\r\n                                <Label>Password</Label>\r\n                            </Col>\r\n                            <Col>\r\n                                <Input\r\n                                    name='password'\r\n                                    id='password'\r\n                                    type='password'\r\n                                    onChange={formik.handleChange}\r\n                                    value={formik.values.password}\r\n                                    required\r\n                                />\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <Row className='ml-auto'>\r\n                            <Col xs={2}>\r\n                                <Button type='submit' className='primary bg-primary'>\r\n                                    Submit\r\n                                </Button>\r\n                            </Col>\r\n                            <Col xs={2}>\r\n                                <Button type='reset' className='primary bg-secondary '>\r\n                                    Cancel\r\n                                </Button>\r\n                            </Col>\r\n                            <Col xs='auto' className='text-center align-items-center '>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;","import { Row, Col, Container, List, ListInlineItem, Button } from \"reactstrap\";\r\nimport Iframe from \"react-iframe\";\r\nimport LoginModal from \"./Login\";\r\nimport RegisterForm from \"./Register\";\r\nimport React from \"react\";\r\n\r\nconst Default = () => {\r\n    return (\r\n        <Container className=\"default-container\">\r\n            <Row>\r\n                <Col xs={12} sm={6}>\r\n                    <h3 style={{ textAlign: \"center\", marginBottom: \"20px\" }}>Gestici le tue Economie SMART!</h3>\r\n                    <span className='home-description'>\r\n                        Tieni traccia delle spese quotiadiane e metti a confronto le spese\r\n                        fra diversi periodi dell'anno oppure tieni d'occhio chi, in famiglia,\r\n                        spende di più. <br /><br />\r\n\r\n                        {window.innerHeight < 800 ?\r\n                            <Col xs={12} sm={6} className='img-home' >\r\n                                <img src='images/piggy_bank_home.png' className='img-fluid img-home' alt='piggybank' />\r\n                                <div className='login-register-button text-center'>\r\n                                    <List type=\"inline\">\r\n                                        <ListInlineItem>\r\n                                            <Button className='login-register'>\r\n                                                <LoginModal />\r\n                                            </Button>\r\n                                        </ListInlineItem>\r\n                                        <ListInlineItem>\r\n                                            <Button className='login-register'>\r\n                                                <RegisterForm />\r\n                                            </Button>\r\n                                        </ListInlineItem>\r\n                                    </List>\r\n                                </div>      </Col> : null}\r\n\r\n                        Con Economies ti sarà possibile monitorare tutte le tue spese etichettate\r\n                        secondo categorie e sotto categorie da te create senza nessuna difficoltà.\r\n                        Inoltre potrai creare fino a un massimo di 5 membri per account sotto il\r\n                        quale assegnare tali spese.<br /><br />\r\n\r\n                       \r\n                    </span>\r\n                    {/* <Col className='iframe'>\r\n                        <span> Guarda il video per capire come funziona!</span>\r\n                        <Iframe\r\n                            url=\"http://www.youtube.com/embed/xDMP3i36naA\"\r\n                            display=\"initial\"\r\n                            position=\"relative\"\r\n                            allowFullScreen \r\n                            width=\"450px\"\r\n                            height=\"300px\"\r\n                        />\r\n                    </Col> */}\r\n                </Col>\r\n                {window.innerHeight > 800 ?\r\n                    <Col xs={12} sm={6} className='img-home' >\r\n                        <img src='images/piggy_bank_home.png' className='img-fluid img-home' alt='piggybank' />\r\n                        <div className='login-register-button text-center'>\r\n                            <List type=\"inline\">\r\n                                <ListInlineItem>\r\n                                    <Button className='login-register'>\r\n                                        <LoginModal />\r\n                                    </Button>\r\n                                </ListInlineItem>\r\n                                <ListInlineItem>\r\n                                    <Button className='login-register'>\r\n                                        <RegisterForm />\r\n                                    </Button>\r\n                                </ListInlineItem>\r\n                            </List>\r\n                        </div></Col> : null}\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Default;\r\n","import { Container, Row, Col, Button } from 'reactstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, LabelList} from 'recharts';\r\nimport { COLORS, SHORT_MONTH } from './colors.js'\r\n\r\nconst StatsMember = (data) => {\r\n    const records = data.records\r\n    const members = data.members\r\n    const unique_month = new Set()\r\n    records.forEach(r => unique_month.add(new Date(r.created_at).getMonth()))\r\n\r\n    const unique_member = {};\r\n    members.forEach(m => unique_member[m.id] = m.member_name)\r\n\r\n    const memberCost = {};\r\n    for (let month of unique_month.keys()) memberCost[month] = { tot: 0 };\r\n    records.forEach(r => {\r\n        let month = new Date(r.created_at).getMonth()\r\n        if (unique_member[r.made_by] in memberCost[month]) { memberCost[month][unique_member[r.made_by]] += r.price }\r\n        else { memberCost[month][unique_member[r.made_by]] = r.price }\r\n        memberCost[month].tot += r.price\r\n\r\n    })\r\n\r\n    const dataMember = [];\r\n    Object.keys(memberCost).forEach(k => {\r\n        let tmp = { month: SHORT_MONTH[k] }\r\n        Object.keys(memberCost[k]).forEach(m => { tmp[m] = memberCost[k][m] })\r\n        dataMember.push(tmp)\r\n    })\r\n\r\n    var i = 0;\r\n    const colorBar = [];\r\n    Object.keys(unique_member).forEach(m => { colorBar.push(<Bar dataKey={unique_member[m]} fill={COLORS[i]}><LabelList dataKey={unique_member[m]} position=\"top\" /></Bar>); i++ })\r\n    const max = Math.max.apply(Math, dataMember.map(function(o) { return o.tot; }))\r\n    return (\r\n        <ResponsiveContainer width=\"99%\" aspect={1}>\r\n            <BarChart\r\n                width={500}\r\n                height={300}\r\n                data={dataMember}\r\n            >\r\n                <CartesianGrid />\r\n                <XAxis dataKey=\"month\" />\r\n                <YAxis domain={[0, max+20]} tickCount={10}/>\r\n                <Tooltip />\r\n                <Legend />\r\n                {colorBar}\r\n            </BarChart>\r\n        </ResponsiveContainer>\r\n    )\r\n}\r\n\r\n\r\nexport default StatsMember;","import { Container, Row, Col, Button } from 'reactstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport { SECOND_COLORS, SHORT_MONTH } from './colors.js'\r\n\r\nconst StatsCategory = (data) => {\r\n    const records = data.records\r\n    const categories = data.categories\r\n    const unique_month = new Set()\r\n    const unique_category = {};\r\n\r\n    records.forEach(r => unique_month.add(new Date(r.created_at).getMonth()))\r\n    categories.forEach(m => unique_category[m.id] = m.category_name)\r\n\r\n    const categoryCost = {};\r\n    for (let month of unique_month.keys()) categoryCost[month] = {};\r\n    records.forEach(r => {\r\n        let month = new Date(r.created_at).getMonth()\r\n        if (unique_category[r.category_associated] in categoryCost[month]) { categoryCost[month][unique_category[r.category_associated]] += r.price }\r\n        else { categoryCost[month][unique_category[r.category_associated]] = r.price }\r\n    })\r\n\r\n    const dataCategory = [];\r\n    Object.keys(categoryCost).forEach(k => {\r\n        let tmp = { month: SHORT_MONTH[k] }\r\n        Object.keys(categoryCost[k]).forEach(m => { tmp[m] = categoryCost[k][m] })\r\n        dataCategory.push(tmp)\r\n    })\r\n\r\n    var i = 0;\r\n    const colorCategory = [];\r\n    Object.keys(unique_category).forEach(m => { colorCategory.push(<Bar dataKey={unique_category[m]} stackId='a' fill={SECOND_COLORS[i]} />); i++ })\r\n    return (\r\n        <ResponsiveContainer width=\"99%\" aspect={1}>\r\n            <BarChart\r\n                width={500}\r\n                height={300}\r\n                data={dataCategory}>\r\n                <CartesianGrid />\r\n                <XAxis dataKey=\"month\" />\r\n                <YAxis tickCount={10}/>\r\n                <Tooltip />\r\n                {colorCategory}\r\n                <Legend position='right'/>\r\n            </BarChart>\r\n        </ResponsiveContainer>\r\n    )\r\n}\r\n\r\n\r\nexport default StatsCategory;","import { Container, Row, Col, Button } from 'reactstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer, Legend, Tooltip } from 'recharts';\r\nimport { COLORS, SHORT_MONTH, SECOND_COLORS } from './colors.js'\r\n\r\nconst StatsSubCategory = (data) => {\r\n    const records_c = data.records\r\n    const subcategories = data.subcategories\r\n    const categories = data.categories\r\n    const unique_subcategories = {};\r\n    const unique_category = {};\r\n\r\n    subcategories.forEach(m => unique_subcategories[m.id] = m.sub_category_name)\r\n    categories.forEach(m => unique_category[m.id] = m.category_name)\r\n\r\n    const dataSub = {};\r\n    const dataCate = {};\r\n    var records = [...records_c]\r\n    records.sort(function (a, b) { return a.category_associated - b.category_associated; })\r\n    records.forEach(r => {\r\n        if (unique_category[r.category_associated] in dataCate) { dataCate[unique_category[r.category_associated]] += r.price }\r\n        else { dataCate[unique_category[r.category_associated]] = r.price }\r\n        if (unique_category[r.category_associated] in dataSub) {\r\n            if (r.sub_category_associated) {\r\n                if (unique_subcategories[r.sub_category_associated] in dataSub[unique_category[r.category_associated]]) {\r\n                    dataSub[unique_category[r.category_associated]][unique_subcategories[r.sub_category_associated]] += r.price\r\n                }\r\n                else { dataSub[unique_category[r.category_associated]][unique_subcategories[r.sub_category_associated]] = r.price }\r\n            }\r\n            else {\r\n                if ('generico' in dataSub[unique_category[r.category_associated]]) {\r\n                    dataSub[unique_category[r.category_associated]][`generico-${unique_category[r.category_associated]}`] += r.price\r\n                }\r\n                else { dataSub[unique_category[r.category_associated]][`generico-${unique_category[r.category_associated]}`] = r.price }\r\n            }\r\n        } else {\r\n            dataSub[unique_category[r.category_associated]] = {}\r\n            if (r.sub_category_associated) {\r\n                if (unique_subcategories[r.sub_category_associated] in dataSub[unique_category[r.category_associated]]) {\r\n                    dataSub[unique_category[r.category_associated]][unique_subcategories[r.sub_category_associated]] += r.price\r\n                }\r\n                else { dataSub[unique_category[r.category_associated]][unique_subcategories[r.sub_category_associated]] = r.price }\r\n            }\r\n            else {\r\n                if ('generico' in dataSub[unique_category[r.category_associated]]) {\r\n                    dataSub[unique_category[r.category_associated]][`generico-${unique_category[r.category_associated]}`] += r.price\r\n                }\r\n                else { dataSub[unique_category[r.category_associated]][`generico-${unique_category[r.category_associated]}`] = r.price }\r\n            }\r\n        }\r\n    })\r\n\r\n    var dataMain = []\r\n    var main_color = [];\r\n    var dataSec = []\r\n    var sec_color = [];\r\n\r\n    let i = 0\r\n    let j = 0\r\n    Object.keys(dataCate).forEach(k => {\r\n        dataMain.push({ name: k, value: dataCate[k] })\r\n        main_color.push(<Cell key={`cell-${i}`} fill={COLORS[i]} />);\r\n        i++\r\n        Object.keys(dataSub[k]).forEach(kk => {\r\n            dataSec.push({ name: kk, value: dataSub[k][kk] })\r\n            sec_color.push(<Cell key={`cell-${j}`} fill={SECOND_COLORS[j]} />);\r\n            j++\r\n\r\n        })\r\n    })\r\n\r\n    const rateo = window.innerWidth < 800 ? 1 : 2.5\r\n    return (\r\n\r\n        <ResponsiveContainer width=\"100%\" aspect={rateo}>\r\n            <PieChart>\r\n                <Pie data={dataMain} dataKey=\"value\"\r\n                paddingAngle={1}\r\n                 outerRadius={120}\r\n                 fill=\"#8884d8\" >\r\n                {/* {main_color} */}\r\n                </Pie>\r\n                <Pie data={dataSec} \r\n                paddingAngle={1}\r\n                dataKey=\"value\" \r\n                innerRadius={125}\r\n                 outerRadius={170} \r\n                 fill=\"#82ca9d\" label >\r\n                {sec_color}\r\n                </Pie>\r\n                <Tooltip\r\n                    contentStyle={{\r\n                        border: \"4px solid royalblue\",\r\n                        backgroundColor: \"peachpuff\",\r\n                    }}\r\n                />\r\n                {window.innerWidth < 600 ?\r\n                    <Legend\r\n                        margin={{ top: 0, left: 0, right: 0, bottom: 0 }}\r\n                        layout='horizontal' align='center' verticalAlign='bottom' iconSize={10} /> :\r\n                    <Legend\r\n                        layout=\"vertical\"\r\n                        align=\"left\"\r\n                        verticalAlign=\"middle\"\r\n                        iconSize={20} />}\r\n            </PieChart>\r\n        </ResponsiveContainer>\r\n    )\r\n}\r\n\r\n\r\nexport default StatsSubCategory;","import StatsMember from './StatsMember';\r\nimport StatsCategory from './StatsCategory';\r\nimport StatsSubCategory from './StatsSub';\r\nimport { useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport {\r\n    Button, Col, Container, Form, FormGroup, Input,\r\n    Label, Modal, ModalBody, ModalHeader, Row, Table\r\n} from 'reactstrap';\r\n\r\nconst Stats = () => {\r\n    const records_o = useSelector(state => state.members.records)\r\n    const members = useSelector(state => state.members.members)\r\n    const categories = useSelector(state => state.members.categories)\r\n    const subcategories = useSelector(state => state.members.subcategories)\r\n\r\n    var records = JSON.parse(JSON.stringify(records_o))\r\n\r\n    var date = new Date(); date.setFullYear(date.getFullYear() - 1);\r\n    const [category, setCategory] = useState(null)\r\n    const [firstdate, setFirstdate] = useState(new Date().toJSON().slice(0, 10).replace(/-/g, '-'))\r\n    const [seconddate, setSeconddate] = useState(date.toJSON().slice(0, 10).replace(/-/g, '-'))\r\n\r\n    const renderdCategories = categories.map(c => { return <option value={c.id}>{c.category_name}</option> })\r\n    records.forEach(r => r.created_at = new Date(r.created_at))\r\n    if (category) records = records.filter(r => r.category_associated == (category))\r\n    records = records.filter(r => (r.created_at <= new Date(firstdate) && r.created_at >= new Date(seconddate)))\r\n\r\n    return (\r\n        <Container className='dashboard'>\r\n            <Row className='text-center'><Col><h2 className='dashboard-title'>General Dashboard of all the records</h2></Col></Row>\r\n            <Row className='dashboard-form'>\r\n                <Col xs='12' sm='4' className='dashboard-form-inside'>\r\n                    <Label>Filter by category &nbsp;</Label>\r\n                    <Input\r\n                        name=\"category\" id=\"category\" type=\"select\"\r\n                        onChange={(e) => setCategory(e.target.value)}\r\n                        value={category} className='form-control'>\r\n                        <option value={-1}> None </option>\r\n                        {renderdCategories}\r\n                    </Input>\r\n                </Col>\r\n                <Col xs='6' sm='4' className='dashboard-form-inside'>\r\n                    <Label>From &nbsp;</Label>\r\n                    <Input\r\n                        name=\"category\" id=\"category\" type=\"date\"\r\n                        onChange={(e) => setFirstdate(e.target.value)}\r\n                        value={firstdate} className='form-control' />\r\n                </Col>\r\n                <Col xs='6' sm='4' className='dashboard-form-inside'>\r\n                    <Label> &nbsp; To &nbsp;</Label>\r\n                    <Input\r\n                        name=\"category\" id=\"category\" type=\"date\"\r\n                        onChange={(e) => setSeconddate(e.target.value)}\r\n                        value={seconddate} className='form-control' />\r\n\r\n                </Col>\r\n            </Row>\r\n            <Row className='chart-row'>\r\n                <Col xs='12' md='6' style={{ marginBottom: window.innerHeight < 700 ? \"15px\" : \"30px\" }}>\r\n                    <Row>\r\n                        <Col className='text-center'>\r\n                            <h4>Cost divided by Members</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <StatsMember records={records} members={members} />\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs='12' md='6' style={{ marginBottom: window.innerHeight < 700 ? \"15px\" : \"30px\" }}>\r\n                    <Row>\r\n                        <Col className='text-center'>\r\n                            <h4>Cost divided by Categories</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <StatsCategory records={records} categories={categories} />\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{ margin: window.innerHeight < 700 ? \"15px 0\" : \"30px 0\" }}>\r\n                <Col xs='12' md='12' className='text-center'>\r\n                    <hr />\r\n                    <h4>Cost divided by subcategories</h4>\r\n                    <hr />\r\n                    <StatsSubCategory records={records} categories={categories} subcategories={subcategories} />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Stats;","import {\r\n    Button, Col, Container, Form, FormGroup, Input,\r\n    Label, Modal, ModalBody, ModalHeader, Row, Table\r\n} from 'reactstrap';\r\n\r\nimport { useFormik } from 'formik';\r\nimport React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as axios from 'axios';\r\nimport { memberSlice } from './../features/memberSlice'\r\n\r\nconst Registry = () => {\r\n    var axios = require(\"axios\")\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(state => state.auth.token)\r\n    const categories = useSelector(state => state.members.categories)\r\n    const headers = { Authorization: `Bearer ${token}` }\r\n    const url = 'http://localhost:8000/api/records/'\r\n\r\n    const [type, setType] = useState(\"update\")\r\n    const [addModalS, setaddModalS] = useState(false)\r\n    const [iModal, setInfoModal] = useState(false)\r\n\r\n    const renderdCategories = categories.map(c => { return <option value={c.id}>{c.category_name}</option> })\r\n\r\n    const Info = () => {\r\n        return (\r\n            <Modal size='lg' isOpen={iModal} toggle={() => setInfoModal(!iModal)}>\r\n                <ModalHeader close={<button className=\"close\" onClick={() => setInfoModal(!iModal)}>×\r\n                </button>}>Detail Record</ModalHeader>\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col xs={4}><h6>Title</h6></Col>\r\n                        <Col><p>{current.record_name}</p></Col>\r\n                    </Row>\r\n                    <hr />\r\n                    <Row>\r\n                        <Col xs={4}>\r\n                            <h6>Price</h6>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>{current.price}</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <hr />\r\n                    <Row>\r\n                        <Col xs={4}>\r\n                            <h6>Member</h6>\r\n                        </Col>\r\n                        <Col>\r\n                            <p> {current? members.find((c) => c.id == current.made_by).member_name: null}</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <hr />\r\n                    <Row>\r\n                        <Col xs={4}>\r\n                            <h6>Main Category</h6>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>{current? categories.find((c) => c.id == current.category_associated).category_name: null}</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <hr />\r\n                    <Row>\r\n                        <Col xs={4}>\r\n                            <h6>Sub Category</h6>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>{current.sub_category_associated ? subcategories.find((sc) => sc.id == current.sub_category_associated).sub_category_name : 'Null'}</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <hr />\r\n                    <Row>\r\n                        <Col xs={4}>\r\n                            <h6>Created at</h6>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>{current.created_at}</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <hr />\r\n                    <Row>\r\n                        <Col xs={4}>\r\n                            <h6>Description</h6>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>{current.description}</p>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n            </Modal>\r\n        )\r\n    };\r\n\r\n    const AddModal = () => {\r\n        const formik = useFormik({\r\n            initialValues: {\r\n                record_name: current.record_name,\r\n                price: current.price,\r\n                made_by: current.made_by,\r\n                category_associated: current.category_associated,\r\n                sub_category_associated: current.sub_category_associated,\r\n                description: current.description,\r\n                created_at: current.created_at,\r\n            },\r\n            onSubmit: (values, { resetForm }) => {\r\n                setaddModalS(!addModalS)\r\n                if (values.sub_category_associated === -1) { values.sub_category_associated = null }\r\n                switch (type) {\r\n                    case \"delete\":\r\n                        deleteCategory(current.id);\r\n                        break;\r\n                    default:\r\n                        modifyCategory({ values });\r\n                        break;\r\n                }\r\n                resetForm()\r\n            }\r\n        });\r\n\r\n        function deleteCategory(id) {\r\n            var config = {\r\n                method: 'delete',\r\n                url: url,\r\n                headers: headers,\r\n                data: { id: id }\r\n            };\r\n\r\n            axios(config)\r\n                .then(() => {dispatch(memberSlice.actions.removeRecord(current.id))})\r\n                .catch(e => ({ e })) //console.log\r\n        }\r\n\r\n\r\n        function modifyCategory({ values }) {\r\n            values.id = current.id\r\n            var config = {\r\n                method: 'put',\r\n                url: url,\r\n                headers: headers,\r\n                data: values\r\n            };\r\n            axios(config)\r\n                .then((values) =>{dispatch(memberSlice.actions.updateRecord({values}))})\r\n                .catch(e => ({ e })) //console.log\r\n        }\r\n\r\n        const renderedMembers = members.map((m) => { return <option value={m.id}>{m.member_name}</option> });\r\n        const selectedSub = subcategories.filter(sb => sb.primary_category == formik.values.category_associated)\r\n        const renderedSubCategories = selectedSub.map((m) => { return <option value={m.id}>{m.sub_category_name}</option> });\r\n        return (\r\n            <Modal isOpen={addModalS} toggle={() => setaddModalS(!addModalS)}>\r\n                <ModalHeader close={<button className=\"close\" onClick={() => setaddModalS(!addModalS)}>×\r\n                </button>}>Form Record</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={formik.handleSubmit}>\r\n                        <Container>\r\n                            {type != \"delete\" ?\r\n                                <React.Fragment>\r\n                                    <FormGroup>\r\n                                        <Row>\r\n                                            <Col xs=\"4\" className=\"align-items-center\">\r\n                                                <Label>Record Name</Label>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Input\r\n                                                    className='form-control'\r\n                                                    name=\"record_name\"\r\n                                                    id=\"record_name\"\r\n                                                    type=\"text\"\r\n                                                    onChange={(e) => { formik.handleChange(e) }}\r\n                                                    value={formik.values.record_name}\r\n\r\n                                                >\r\n                                                </Input>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Row>\r\n                                            <Col xs=\"4\" className=\"align-items-center\">\r\n                                                <Label>Price</Label>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Input\r\n                                                    className='form-control'\r\n                                                    name=\"price\"\r\n                                                    id=\"price\"\r\n                                                    type=\"number\"\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.price}\r\n\r\n                                                >\r\n                                                </Input>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Row>\r\n                                            <Col xs=\"4\" className=\"align-items-center\">\r\n                                                <Label>Member</Label>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Input\r\n                                                    className='form-control'\r\n                                                    name=\"made_by\"\r\n                                                    id=\"made_by\"\r\n                                                    type=\"select\"\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.made_by}\r\n\r\n                                                >\r\n                                                    {renderedMembers}\r\n                                                </Input>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Row>\r\n                                            <Col xs=\"4\" className=\"align-items-center\">\r\n                                                <Label>Category</Label>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Input\r\n                                                    className='form-control'\r\n                                                    name=\"category_associated\"\r\n                                                    id=\"category_associated\"\r\n                                                    type=\"select\"\r\n                                                    onChange={(e) => { formik.handleChange(e); formik.values.sub_category = -1 }}\r\n                                                    value={formik.values.category_associated}\r\n\r\n                                                >\r\n                                                    {renderdCategories}\r\n                                                </Input>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Row>\r\n                                            <Col xs={4}>\r\n                                                <Label>Sub category</Label>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Input\r\n                                                    className='form-control'\r\n                                                    name=\"sub_category_name\"\r\n                                                    id=\"sub_category_name\"\r\n                                                    type=\"select\"\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.sub_category_name}\r\n                                                >\r\n                                                    <option value={-1}> None </option>\r\n                                                    {renderedSubCategories}\r\n                                                </Input>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Row>\r\n                                            <Col xs={4}>\r\n                                                <Label>Description </Label>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Input\r\n                                                    name=\"description\"\r\n                                                    id=\"description\"\r\n                                                    type=\"text\"\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.description}\r\n                                                    placeholder='Description'\r\n\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Row>\r\n                                            <Col xs={4}>\r\n                                                <Label>Created at</Label>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Input\r\n                                                    name=\"created_at\"\r\n                                                    id=\"created_at\"\r\n                                                    type=\"date\"\r\n                                                    onChange={formik.handleChange}\r\n                                                    value={formik.values.created_at}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </FormGroup>\r\n                                </React.Fragment> :\r\n                                <Container>\r\n                                    <Row>\r\n                                        <Col xs={12}>\r\n                                            <span>Are you sure to delete?</span>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className='text-center'>\r\n                                        <Col xs={12} >\r\n                                            <span><h3 className='deleteName'>{current.record_name}</h3></span>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            }\r\n                            {type != \"delete\" ?\r\n                                <Row className=\"text-center\">\r\n                                    <Col xs={12}>\r\n                                        <Button type=\"submit\" className='subButton' color='primary'>\r\n                                            Save Record\r\n                                        </Button>\r\n                                        <Button type=\"reset\" className='subButton' onClick={() => setaddModalS(!addModalS)} color='secondary'>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row> :\r\n                                <Row className=\"text-center\">\r\n                                    <Col xs={12}>\r\n                                        <Button type=\"submit\" className='subButton' color='danger'>\r\n                                            Delete record\r\n                                        </Button>\r\n                                        <Button type=\"reset\" className='subButton' onClick={() => setaddModalS(!addModalS)} color='secondary'>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>}\r\n                        </Container>\r\n                    </Form >\r\n                </ModalBody>\r\n            </Modal>);\r\n    }\r\n\r\n    const members = useSelector(state => state.members.members)\r\n    const records = useSelector(state => state.members.records)\r\n    const subcategories = useSelector(state => state.members.subcategories)\r\n\r\n    const [current, setCurrent] = useState(records[0])\r\n    const [currentCategory, setcurrentCategory] = useState({})\r\n    \r\n\r\n\r\n    const formik_s = useFormik({ initialValues: { category: -1 } })\r\n    if (formik_s.values.category != -1) {\r\n        var filteredRecords = records.filter(o => o.category_associated == formik_s.values.category)\r\n    } else { var filteredRecords = records }\r\n\r\n    let i = 0;\r\n    const recordsRendered = filteredRecords.map((r) => {\r\n        i++;\r\n        return (\r\n            <tr>\r\n                <td>{i}</td>\r\n                <td>{r.record_name}</td>\r\n                <td>{r.price}</td>\r\n                <td>{members.find(c => c.id == r.made_by).member_name}</td>\r\n                <td>{categories.find(c => c.id == r.category_associated).category_name}</td>\r\n                <td>{r.sub_category_associated ? subcategories.find(sc => sc.id == r.sub_category_associated).sub_category_name : 'Null'}</td>\r\n                <td>{r.created_at}</td>\r\n                <td>\r\n                    <Button color=\"info\" onClick={() => { setCurrent(r); setInfoModal(!iModal); }} ><i className='fa fa-info-circle'></i></Button>\r\n                    <Button color=\"danger\" onClick={() => { setaddModalS(!addModalS); setType(\"delete\"); setCurrent(r) }} ><i className='fa fa-trash-o sm'></i></Button>\r\n                    <Button color=\"primary\" onClick={() => { setaddModalS(!addModalS); setCurrent(r) }} ><i className='fa fa-refresh'></i></Button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <Container>\r\n            {current? <Info />:null}\r\n           {current?  <AddModal />: null}\r\n            <Form inline className='text-center'>\r\n                <Label>Filter by category &nbsp;</Label>\r\n                <Input\r\n                    name=\"category\"\r\n                    id=\"category\"\r\n                    type=\"select\"\r\n                    onChange={formik_s.handleChange}\r\n                    value={formik_s.values.category}\r\n                    className='form-control'\r\n                >\r\n                    <option value={-1}> None </option>\r\n                    {renderdCategories}\r\n                </Input>\r\n            </Form>\r\n            <Row className='confRow'>\r\n\r\n                <Col>\r\n                    <Row className='text-center'>\r\n                        <Table hover responsive striped >\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>Name</th>\r\n                                    <th>Price</th>\r\n                                    <th>Member</th>\r\n                                    <th>Main Category</th>\r\n                                    <th>Sub Category</th>\r\n                                    <th>Created at</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {recordsRendered}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n\r\n}\r\nexport default Registry;\r\n","\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {NavItem } from 'reactstrap'\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport authSlice from '../features/userSlice';\r\n\r\n\r\nconst LogoutForm = () => {\r\n    const dispatch = useDispatch()\r\n    const handleLogout = () => {dispatch(authSlice.actions.logout())}\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <NavItem className>\r\n                <NavLink to='#' className='nav-link' onClick={handleLogout}>\r\n                    Logout\r\n                </NavLink>\r\n            </NavItem>\r\n        </React.Fragment>  \r\n        )\r\n}\r\n\r\nexport default LogoutForm;","import { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Container } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport React, { useState, Component } from 'react';\r\nimport LoginModal from './Login'\r\nimport LoginForm from './Login'\r\nimport LogoutForm from './Logout';\r\nimport RegisterForm from './Register';\r\n\r\nconst MyNav = () => {\r\n    const [isOpen, setOpen] = useState(false);\r\n    const isLogged = useSelector(state => state.auth.isLogged)\r\n\r\n    const AuthenticatedUser = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <LogoutForm />\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    const ExternalUser = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <LoginModal />\r\n                <RegisterForm />\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Navbar light expand='xs' className='myNav'>\r\n            <Container>\r\n            <NavbarBrand> <NavLink to='/home'> Economies  <img src='images/piggy_bank.png' width='35'/> </NavLink></NavbarBrand>\r\n            <NavbarToggler onClick={() => setOpen(!isOpen)} />\r\n            \r\n            <Collapse isOpen={isOpen} navbar>\r\n                <Nav navbar className='ml-auto'>\r\n                    {isLogged?  <AuthenticatedUser /> : < ExternalUser /> }\r\n                </Nav>\r\n            </Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default MyNav;\r\n","import {Row , Col, List, ListInlineItem, Container } from 'reactstrap';\r\n\r\nexport const Footer = () => {\r\n    return(\r\n        <Row className='myFooter align-items-center' >\r\n            <Container style={{paddingTop:\"10px\"}}>\r\n            <Col className='text-center'>\r\n                <span>@Copyright GabrieleGhisleni</span>\r\n            </Col>\r\n            <Col className='text-center Icons'>\r\n            <List type=\"inline\">\r\n                            <ListInlineItem>\r\n                                <a href=\"https://github.com/GabrieleGhisleni\">\r\n                                    <i className=\"fa fa-github fa-lg\"></i>\r\n                                </a>\r\n                            </ListInlineItem>\r\n                            <ListInlineItem>\r\n                                <a href=\"https://www.linkedin.com/in/gabriele-ghisleni-bb553a199/\">\r\n                                    <i className=\"fa fa-linkedin fa-lg\"></i>\r\n                                </a>\r\n                            </ListInlineItem>\r\n                            <ListInlineItem>\r\n                                <a href=\"https://www.facebook.com/gabriele.ghisleni.125\">\r\n                                    <i className=\"fa fa-facebook fa-lg\"></i>\r\n                                </a>\r\n                            </ListInlineItem>\r\n                            <ListInlineItem>\r\n                                <a href=\"https://www.instagram.com/g_gabry_/\">\r\n                                    <i className=\"fa fa-instagram fa-lg\"></i>\r\n                                </a>\r\n                            </ListInlineItem>\r\n                            <ListInlineItem>\r\n                                <a href=\"mailto:gabriele.ghisleni01@gmail.com\">\r\n                                    <i className=\"fa fa-envelope-o fa-lg\"></i>\r\n                                </a>\r\n                            </ListInlineItem>\r\n                            <ListInlineItem>\r\n                                <a href=\"@\">\r\n                                    <i className=\"fa fa-info fa-lg\"></i>\r\n                                </a>\r\n                            </ListInlineItem>\r\n                        </List>\r\n            </Col>\r\n        </Container>\r\n        </Row>  \r\n    );\r\n}\r\n\r\nexport default Footer;","import { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux';\r\nimport React  from 'react';\r\n\r\n\r\nimport Configurations from './Configuration';\r\nimport Dashboard from './Dashboard';\r\nimport Default from './Default'\r\nimport Stats from './Stats';\r\nimport  Registry  from './Registry';\r\n\r\nimport SecondNav from './NavSecond';\r\nimport MyNav from './NavMain';\r\nimport Footer from './Footer';\r\n\r\n\r\nconst Main = () => {\r\n    const isLogged = useSelector(state => state.auth.isLogged)\r\n    return (\r\n        <React.Fragment>\r\n            <MyNav />\r\n            {isLogged? <SecondNav/>: <div></div>}\r\n            <Switch>\r\n                <Route exact path=\"/home\" component={isLogged? Dashboard: Default} />\r\n                {isLogged? <Route exact path=\"/dashboard/\" component={Stats} /> : null}\r\n                {isLogged? <Route exact path=\"/history/\" component={Registry} /> : null}\r\n                {isLogged? <Route exact path=\"/configurations/\" component={Configurations} />: null}\r\n                <Redirect to='/home' />\r\n            </Switch>\r\n            <Footer />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Main;","import { FLUSH, PAUSE, PERSIST, persistReducer, persistStore, PURGE, REGISTER, REHYDRATE } from \"redux-persist\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { combineReducers } from \"redux\";\r\nimport authSlice from \"./userSlice\";\r\nimport memberSlice from './memberSlice';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authSlice.reducer,\r\n    members: memberSlice.reducer\r\n});\r\n\r\nconst persistedReducer = persistReducer(\r\n    {\r\n        key: \"root\",\r\n        version: 1,\r\n        storage: storage,\r\n        // blacklist: ['members']\r\n    },\r\n    rootReducer\r\n);\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  });\r\n\r\nexport const persistor = persistStore(store);\r\nexport default store;","import './css/style.css'\n\nimport Main from './components/Main'\n\nimport { Provider } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store, { persistor } from \"./features/store\";\n\nfunction App() {\n  \n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor} loading={null}>\n        <Router>\n          <Main />\n        </Router>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './css/style.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}